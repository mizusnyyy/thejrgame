[gd_scene load_steps=11 format=3 uid="uid://cevmeaiib8auh"]

[ext_resource type="Script" path="res://scenes/ui/panel.gd" id="2_e4lyg"]
[ext_resource type="Script" uid="uid://o7onsywlm8iu" path="res://scenes/ui/fs.gd" id="2_nv40g"]
[ext_resource type="FontFile" uid="uid://bipo0dsq476dk" path="res://assets/font/dialoge8.ttf" id="3_7iixm"]
[ext_resource type="Texture2D" uid="uid://e5q4i0heuvg3" path="res://assets/sprite/characters/party/jr/teto_front.png" id="5_xwmki"]
[ext_resource type="Texture2D" uid="uid://bq1mj2osrqcqs" path="res://assets/sprite/characters/party/jr/teto_side.png" id="6_4vjlj"]
[ext_resource type="Texture2D" uid="uid://cmj27cly056f7" path="res://assets/sprite/characters/party/jr/teto_back.png" id="7_o8uho"]
[ext_resource type="Texture2D" uid="uid://6kf44nmw8j3i" path="res://assets/sprite/characters/party/jr/teto_side_better.png" id="8_c21ug"]
[ext_resource type="Texture2D" uid="uid://cxjg8v51ap1oy" path="res://steamhappy.png" id="9_4vjlj"]

[sub_resource type="GDScript" id="GDScript_xwmki"]
script/source = "extends Node2D

@onready var input_field: LineEdit = $CanvasLayer/Panel/LineEdit
@onready var output_label: RichTextLabel = $CanvasLayer/Panel/RichTextLabel
@onready var canvaslayer = $console
@onready var steamhappyemoji = $steamhappy/steamhappy
var initial_text=\"pablo game console™\"

var expression = Expression.new()
var custom_commands = {}
func goto_scene(path: String):
	get_tree().change_scene_to_file(path)
func goto_teto(path: String):
	get_tree().change_scene_to_file(\"res://scenes/story/pre-core/\"+path+\".tscn\")

func set_var(variable, value):
	if has_variable(global, variable):
		global.set(variable, value)
		output(\"global.\" + str(variable) + \" = \" + str(value))
	else:
		output(\"[color=red]no such global variable: %s[/color]\" % variable)
func get_var(variable):
	if has_variable(global, variable):
		var value = global.get(variable)
		output(\"global.\" + str(variable) + \" = \" + str(value))
	else:
		output(\"[color=red]no such global variable: %s[/color]\" % variable)
func get_vars():
	var vars = global.get_property_list()
	var found = false	

	output(\"[color=light_blue]global variables:[/color]\")

	for var_info in vars:
		if var_info.usage & PROPERTY_USAGE_SCRIPT_VARIABLE != 0:
			var name = var_info.name
			var value = global.get(name)
			output(\"- [color=white]%s[/color] = %s\" % [name, str(value)])
			found = true

	if not found:
		output(\"[color=yellow]no global vars found lol[/color]\")

func clear():
	output_label.text=initial_text
func steamhappy():
	if steamhappyemoji.visible:
		steamhappyemoji.hide()
	else:
		steamhappyemoji.show()

func _ready():
	canvaslayer.hide()
	input_field.text_submitted.connect(_on_text_submitted)
	register_command(\"goto_teto\", Callable(self, \"goto_teto\"))
	register_command(\"goto_scene\", Callable(self, \"goto_scene\"))
	register_command(\"set_var\", Callable(self, \"set_var\"))
	register_command(\"get_var\", Callable(self, \"get_var\"))
	register_command(\"clear\",Callable(self,\"clear\"))
	register_command(\"get_vars\", Callable(self, \"get_vars\"))
	register_command(\"steamhappy\",Callable(self,\"steamhappy\"))
func _process(delta: float) -> void:
	if Input.is_action_just_pressed(\"console\"):
		if canvaslayer.visible==true:
			canvaslayer.hide()
		else:
			canvaslayer.show()



func register_command(name: String, callback: Callable):
	custom_commands[name] = callback
func output(text: String):
	output_label.append_text(text + \"\\n\")

func _on_text_submitted(command: String):
	input_field.clear()

	if command.strip_edges() == \"\":
		return

	output(\"[color=white]> \" + command)

	if _try_execute_command_line(command):
		return

	var error = expression.parse(command)
	if error != OK:
		output(\"[color=red]error bro: %s[/color]\" % expression.get_error_text())
		return

	var result = expression.execute()
	if expression.has_execute_failed():
		output(\"[color=red]no command bro[/color]\")
	else:
		output(str(result))

func _try_execute_command_line(command: String) -> bool:
	var tokens = command.strip_edges().split(\" \", false)
	if tokens.size() == 0:
		return false

	var cmd_name = tokens[0]
	var args = tokens.slice(1, tokens.size())

	var parsed_args = []
	for arg in args:
		if arg.is_valid_float():
			parsed_args.append(arg.to_float())
		elif arg.is_valid_int():
			parsed_args.append(arg.to_int())
		elif (arg.begins_with('\"') and arg.ends_with('\"')) or (arg.begins_with(\"'\") and arg.ends_with(\"'\")):
			parsed_args.append(arg.substr(1, arg.length() - 2))
		else:
			parsed_args.append(arg)

	if custom_commands.has(cmd_name):
		custom_commands[cmd_name].callv(parsed_args)
		return true

	return false



func has_variable(obj: Object, name: String) -> bool:
	for prop in obj.get_property_list():
		if prop.name == name:
			return true
	return false
"

[sub_resource type="SpriteFrames" id="SpriteFrames_xwmki"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": ExtResource("5_xwmki")
}, {
"duration": 1.0,
"texture": ExtResource("8_c21ug")
}, {
"duration": 1.0,
"texture": ExtResource("7_o8uho")
}, {
"duration": 1.0,
"texture": ExtResource("6_4vjlj")
}],
"loop": true,
"name": &"default",
"speed": 8.0
}]

[node name="console" type="Node2D"]
process_mode = 3
script = SubResource("GDScript_xwmki")

[node name="fs&pause handler" type="Node2D" parent="."]
script = ExtResource("2_nv40g")

[node name="steamhappy" type="CanvasLayer" parent="."]

[node name="steamhappy" type="Sprite2D" parent="steamhappy"]
visible = false
position = Vector2(672, 360)
scale = Vector2(1, 0.5)
texture = ExtResource("9_4vjlj")

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="Panel" type="Panel" parent="CanvasLayer"]
offset_left = 64.0
offset_top = 64.0
offset_right = 512.0
offset_bottom = 400.0
script = ExtResource("2_e4lyg")

[node name="LineEdit" type="LineEdit" parent="CanvasLayer/Panel"]
layout_mode = 1
anchors_preset = -1
anchor_left = -0.0591518
anchor_top = 0.813988
anchor_right = 0.297991
anchor_bottom = 0.813988
offset_left = 26.5
offset_top = 22.5
offset_right = 314.5
offset_bottom = 62.5
theme_override_colors/font_color = Color(1, 1, 1, 1)
theme_override_fonts/font = ExtResource("3_7iixm")

[node name="RichTextLabel" type="RichTextLabel" parent="CanvasLayer/Panel"]
layout_mode = 1
offset_right = 448.0
offset_bottom = 296.0
theme_override_colors/default_color = Color(1, 1, 1, 1)
theme_override_fonts/normal_font = ExtResource("3_7iixm")
text = "pablo game console™
"
autowrap_mode = 1
metadata/_edit_use_anchors_ = true

[node name="teeeto" type="AnimatedSprite2D" parent="CanvasLayer/Panel"]
modulate = Color(1, 1, 1, 0.388235)
position = Vector2(408, 40)
scale = Vector2(2, 2)
sprite_frames = SubResource("SpriteFrames_xwmki")
autoplay = "default"
frame_progress = 0.362494

[node name="pause" type="CanvasLayer" parent="."]

[node name="ColorRect" type="ColorRect" parent="pause"]
visible = false
offset_right = 1280.0
offset_bottom = 720.0
color = Color(0, 0, 0, 0.784314)

[node name="Label" type="Label" parent="pause/ColorRect"]
layout_mode = 1
anchors_preset = -1
offset_left = 16.0
offset_top = 16.0
offset_right = 132.0
offset_bottom = 32.0
scale = Vector2(2, 2)
theme_override_fonts/font = ExtResource("3_7iixm")
text = "paused :3"
metadata/_edit_use_anchors_ = true
